// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_array from "rescript/lib/es6/js_array.js";
import * as Js_option from "rescript/lib/es6/js_option.js";
import * as Js_string from "rescript/lib/es6/js_string.js";

function mediaFmt(media) {
  switch (media) {
    case "Video" :
        return [
                "mp4",
                "avi",
                "mov",
                "mkv"
              ];
    case "Audio" :
        return [
                "mp3",
                "wav",
                "flac",
                "aac"
              ];
    case "Image" :
        return [
                "jpg",
                "png",
                "gif"
              ];
    case "Text" :
        return [
                "txt",
                "doc",
                "pdf",
                "md",
                "epub"
              ];
    
  }
}

function mediaClassify(media) {
  var isSuffix = function (url, fmt) {
    return Js_option.isSome(Js_array.find((function (param) {
                      return Js_string.endsWith(url, param);
                    }), mediaFmt(fmt)));
  };
  var includKey = function (url, arr) {
    return Js_option.isSome(Js_array.find((function (param) {
                      return Js_string.includes(url, param);
                    }), arr));
  };
  switch (media) {
    case "Video" :
        return function (url) {
          if (isSuffix(url, "Video")) {
            return true;
          } else {
            return includKey(url, [
                        "youtube.com",
                        "vimeo.com"
                      ]);
          }
        };
    case "Audio" :
        return function (url) {
          if (isSuffix(url, "Audio")) {
            return true;
          } else {
            return includKey(url, [
                        "youtube.com",
                        "spotify.com",
                        "soundcloud.com"
                      ]);
          }
        };
    case "Image" :
        return function (url) {
          if (isSuffix(url, "Image")) {
            return true;
          } else {
            return includKey(url, [
                        "imgur.com",
                        "flickr.com"
                      ]);
          }
        };
    case "Text" :
        return function (url) {
          if (isSuffix(url, "Text")) {
            return true;
          } else {
            return includKey(url, [
                        "medium.com",
                        "wikipedia.org",
                        "libgen.is",
                        "sci-hub"
                      ]);
          }
        };
    
  }
}

function classify(url) {
  var mediaTypes = [
    "Video",
    "Audio",
    "Image",
    "Text"
  ];
  return Js_array.filter((function (media) {
                return mediaClassify(media)(url);
              }), mediaTypes);
}

export {
  mediaFmt ,
  mediaClassify ,
  classify ,
}
/* No side effect */
